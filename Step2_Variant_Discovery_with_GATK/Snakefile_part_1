import os
import glob

# Get the current user's home directory
home_dir = os.path.expanduser("~")

# Get the current user's shell
user_shell = os.environ["SHELL"]

# Modify the shell.prefix command
shell.prefix("source {}/.bash_profile; set -euo pipefail;".format(home_dir))
from util.varsub import varsub
configfile: "config_part1.yaml"
varsub(config)

# A Snakemake regular expression matching the FASTQ files.
SAMPLES, = glob_wildcards(config['datadirs']['fastq'] + "/" + "{file}.fastq.gz")

# Rules --------------------------------------------------------------------------------
rule all:
    input:
        #config['reference']['stargenomedir']['hg38'] + "/" + "SAindex",
        config['datadirs']['sj_files'] + "/" + "SJ.out.pass1_merged.tab",
        expand(config['datadirs']['qc'] + "/" + "{file}_fastqc.html", file=SAMPLES),
        expand(config['datadirs']['trim'] + "/" + "{file}_trimmed.fq.gz", file=SAMPLES),
        expand(config['datadirs']['bam'] + "/" + "{file}_SJ.out.tab", file=SAMPLES),
        expand(config['datadirs']['pass2'] + "/" + "{file}_Aligned.sortedByCoord.out.bam", file=SAMPLES)

# QC of raw fastq files.
rule fastqc:
    input:
        f1 = config['datadirs']['fastq'] + "/" + "{file}.fastq.gz"
    output:
        config['datadirs']['qc'] + "/" + "{file}_fastqc.html",
        config['datadirs']['qc'] + "/" + "{file}_fastqc.zip"
    params:
        prefix = config['datadirs']['qc']
    resources:
        mem_mb = 10000  # this might cause problems
    shell:
        """
        /home/gdurmaz/miniconda3/envs/snakemake_env/bin/./fastqc --thread 8 --outdir {params.prefix} --nogroup {input.f1}
        """

# Trimming of the Illumina adapters.
rule trim_galore:
    input:
        f1 = config['datadirs']['fastq'] + "/" + "{file}.fastq.gz"
    output:
        fwd_pai = config['datadirs']['trim'] + "/" + "{file}_trimmed.fq.gz"
    params:
        extra = " -j 8 --illumina -q 20 --phred33 --length 20",
        prefix = config['datadirs']['trim']
    resources:
        mem_mb = 20000  # this might cause problems
    shell:
        """
        /home/gdurmaz/TrimGalore-0.6.10/trim_galore \
        --path_to_cutadapt /home/gdurmaz/miniconda3/envs/snakemake_env/bin/cutadapt \
        {params.extra} \
        {input.f1} \
        -o {params.prefix}
        """

rule pass1:
    input:
        f1 = config['datadirs']['trim'] + "/" + "{file}_trimmed.fq.gz"
    output:
        config['datadirs']['bam'] + "/" + "{file}_SJ.out.tab",
        config['datadirs']['bam'] + "/" + "{file}_Aligned.toTranscriptome.out.bam"
    params:
        genomedir = config['reference']['star_ref'],
        prefix = config['datadirs']['bam'] + "/" + "{file}_"
    threads: 16
    resources:
        mem_mb = 40000  # this might cause problems
    shell:
        """
        /home/gdurmaz/miniconda3/envs/snakemake_env/bin/./STAR \
        --runThreadN {threads} \
        --genomeDir {params.genomedir} \
        --readFilesIn {input.f1} \
        --readFilesCommand zcat \
        --outFileNamePrefix {params.prefix} \
        --outSAMtype None \
        --outSAMunmapped Within \
        --quantMode TranscriptomeSAM \
        --outSAMattributes NH HI AS NM MD \
        --outFilterType BySJout \
        --outFilterMultimapNmax 20 \
        --outFilterMismatchNmax 999 \
        --outFilterMismatchNoverReadLmax 0.04 \
        --alignIntronMin 20 \
        --alignIntronMax 1000000 \
        --alignSJoverhangMin 8 \
        --alignSJDBoverhangMin 1 \
        --sjdbScore 1 \
        --limitBAMsortRAM 50000000000
        """

# Merge the splice junction information from pass1 mapping.
rule SJ_Merge:
    input:
        sjs = expand(config['datadirs']['bam'] + "/" + "{file}_SJ.out.tab", file=SAMPLES)
    output:
        sjs = config['datadirs']['sj_files'] + "/" + "SJ.out.pass1_merged.tab"
    threads: 1
    shell:
        """
        cat {input.sjs} | awk '$7 >= 3' | cut -f1-4 | sort -u > {output.sjs}
        """


# Make an index of the genome for STAR using the merged splice junction information to get better alignments around novel splice junctions.
#rule star_genome:
#    input:
#        fasta = config['reference']['fasta']['hg38'],
#        gtf = config['reference']['gtf']['hg38'],
#        sjs = config['datadirs']['sj_files'] + "/" + "SJ.out.pass1_merged.tab",
#        queue = rules.SJ_Merge.output.sjs
#    output:
#        starindex = config['reference']['stargenomedir']['hg38'] + "/" + "SAindex"
#    params:
#        genomedir = config['reference']['stargenomedir']['hg38'],  # Move to params
#        overhang = 99
#    threads: 12
#    resources:
#        mem_mb = 40000
#    shell: """
#        mkdir -p {params.genomedir}  # Create directory first
#        /home/gdurmaz/miniconda3/envs/snakemake_env/bin/./STAR \\
#        --runThreadN {threads} \\
#        --runMode genomeGenerate \\
#        --genomeDir {params.genomedir} \\
#        --outFileNamePrefix {params.genomedir}/ \\
#        --genomeFastaFiles {input.fasta} \\
#        --sjdbGTFfile {input.gtf} \\
#        --limitSjdbInsertNsj 2037800 \\
#        --sjdbFileChrStartEnd {input.sjs} \\
#        --sjdbOverhang {params.overhang}
#    """

# 1. Map single-end RNA-seq reads to the genome.
# 2. Make a coordinate sorted BAM with genomic coordinates.
# 3. Count the number of reads mapped to each gene.
# 4. Count the number of reads supporting each splice junction.
rule pass2:
    input:
        f1 = config['datadirs']['trim'] + "/" + "{file}_trimmed.fq.gz",
        line = config['reference']['stargenomedir']['hg38'] + "/" + "SAindex"
    output:
        config['datadirs']['pass2'] + "/" + "{file}_Aligned.toTranscriptome.out.bam",
        config['datadirs']['pass2'] + "/" + "{file}_Aligned.sortedByCoord.out.bam"
    params:
        genomedir = config['reference']['stargenomedir']['hg38'],
        prefix = config['datadirs']['pass2'] + "/" + "{file}_"
    threads: 16
    resources:
        mem_mb = 50000
    shell:
        """
        /home/gdurmaz/miniconda3/envs/snakemake_env/bin/./STAR \
        --runThreadN {threads} \
        --genomeDir {params.genomedir} \
        --readFilesIn {input.f1} \
        --readFilesCommand zcat \
        --outFileNamePrefix {params.prefix} \
        --outSAMtype BAM SortedByCoordinate \
        --outSAMunmapped Within \
        --quantMode TranscriptomeSAM \
        --outSAMattributes NH HI AS NM MD \
        --outFilterType BySJout \
        --outFilterMultimapNmax 20 \
        --outFilterMismatchNmax 999 \
        --outFilterMismatchNoverReadLmax 0.04 \
        --alignIntronMin 20 \
        --alignIntronMax 1000000 \
        --alignSJoverhangMin 8 \
        --alignSJDBoverhangMin 1 \
        --sjdbScore 1 \
        --outBAMsortingThreadN 5 \
        --limitBAMsortRAM 50000000000
        """